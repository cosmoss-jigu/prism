m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:3: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:3: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:3: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^PACKAGE_URL$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:3: -1- m4_pattern_allow([^target_alias$])
m4trace:configure.ac:7: -1- m4_pattern_allow([^ac_configure_args$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:11: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXXFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^CXX$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^ac_ct_CXX$])
m4trace:configure.ac:13: -1- _m4_warn([obsolete], [The macro `AC_LANG_CPLUSPLUS' is obsolete.
You should run autoupdate.], [../../lib/autoconf/c.m4:252: AC_LANG_CPLUSPLUS is expanded from...
configure.ac:13: the top level])
m4trace:configure.ac:15: -1- m4_pattern_allow([^WORDS_BIGENDIAN_SET$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^CXXCPP$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^WORDS_BIGENDIAN$])
m4trace:configure.ac:16: -1- m4_pattern_allow([^AC_APPLE_UNIVERSAL_BUILD$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^HAVE_LIBNUMA$])
m4trace:configure.ac:25: -1- AC_DEFUN([KVDB_CHECK_BUILTIN], [
    AC_CACHE_CHECK([for $1 builtin], [ac_cv_have_$1],
	[AC_LINK_IFELSE([AC_LANG_PROGRAM([$2], [])],
	    [ac_cv_have_$1=yes], [ac_cv_have_$1=no])])
    if test $ac_cv_have_$1 = yes; then
	AC_DEFINE(AS_TR_CPP([HAVE_$1]), [1], [Define if you have the $1 builtin.])
    fi
])
m4trace:configure.ac:34: -1- KVDB_CHECK_BUILTIN([__builtin_clz], [[unsigned f(unsigned x) { return __builtin_clz(x); }]])
m4trace:configure.ac:34: -1- m4_pattern_allow([^HAVE___BUILTIN_CLZ$])
m4trace:configure.ac:37: -1- KVDB_CHECK_BUILTIN([__builtin_clzl], [[unsigned long f(unsigned long x) { return __builtin_clzl(x); }]])
m4trace:configure.ac:37: -1- m4_pattern_allow([^HAVE___BUILTIN_CLZL$])
m4trace:configure.ac:40: -1- KVDB_CHECK_BUILTIN([__builtin_clzll], [[unsigned long long f(unsigned long long x) { return __builtin_clzll(x); }]])
m4trace:configure.ac:40: -1- m4_pattern_allow([^HAVE___BUILTIN_CLZLL$])
m4trace:configure.ac:43: -1- KVDB_CHECK_BUILTIN([__builtin_ctz], [[unsigned f(unsigned x) { return __builtin_ctz(x); }]])
m4trace:configure.ac:43: -1- m4_pattern_allow([^HAVE___BUILTIN_CTZ$])
m4trace:configure.ac:46: -1- KVDB_CHECK_BUILTIN([__builtin_ctzl], [[unsigned long f(unsigned long x) { return __builtin_ctzl(x); }]])
m4trace:configure.ac:46: -1- m4_pattern_allow([^HAVE___BUILTIN_CTZL$])
m4trace:configure.ac:49: -1- KVDB_CHECK_BUILTIN([__builtin_ctzll], [[unsigned long long f(unsigned long long x) { return __builtin_ctzll(x); }]])
m4trace:configure.ac:49: -1- m4_pattern_allow([^HAVE___BUILTIN_CTZLL$])
m4trace:configure.ac:52: -1- KVDB_CHECK_BUILTIN([__sync_synchronize], [[long x = 11;
    void f(long i) { long* y = &x; __sync_synchronize(); *y = i; }]])
m4trace:configure.ac:52: -1- m4_pattern_allow([^HAVE___SYNC_SYNCHRONIZE$])
m4trace:configure.ac:55: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_add], [[long f(long* x) { return __sync_fetch_and_add(x, 2L); }]])
m4trace:configure.ac:55: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_ADD$])
m4trace:configure.ac:58: -1- KVDB_CHECK_BUILTIN([__sync_add_and_fetch], [[long f(long* x) { return __sync_add_and_fetch(x, 2L); }]])
m4trace:configure.ac:58: -1- m4_pattern_allow([^HAVE___SYNC_ADD_AND_FETCH$])
m4trace:configure.ac:61: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_add_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_fetch_and_add(x, (int64_t) 2); }]])
m4trace:configure.ac:61: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_ADD_8$])
m4trace:configure.ac:65: -1- KVDB_CHECK_BUILTIN([__sync_add_and_fetch_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_add_and_fetch(x, (int64_t) 2); }]])
m4trace:configure.ac:65: -1- m4_pattern_allow([^HAVE___SYNC_ADD_AND_FETCH_8$])
m4trace:configure.ac:69: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_or], [[long f(long* x) { return __sync_fetch_and_or(x, 2L); }]])
m4trace:configure.ac:69: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_OR$])
m4trace:configure.ac:72: -1- KVDB_CHECK_BUILTIN([__sync_or_and_fetch], [[long f(long* x) { return __sync_or_and_fetch(x, 2L); }]])
m4trace:configure.ac:72: -1- m4_pattern_allow([^HAVE___SYNC_OR_AND_FETCH$])
m4trace:configure.ac:75: -1- KVDB_CHECK_BUILTIN([__sync_fetch_and_or_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_fetch_and_or(x, (int64_t) 2); }]])
m4trace:configure.ac:75: -1- m4_pattern_allow([^HAVE___SYNC_FETCH_AND_OR_8$])
m4trace:configure.ac:79: -1- KVDB_CHECK_BUILTIN([__sync_or_and_fetch_8], [[#include <stdint.h>
    int64_t f(int64_t* x) { return __sync_or_and_fetch(x, (int64_t) 2); }]])
m4trace:configure.ac:79: -1- m4_pattern_allow([^HAVE___SYNC_OR_AND_FETCH_8$])
m4trace:configure.ac:83: -1- KVDB_CHECK_BUILTIN([__sync_bool_compare_and_swap], [[bool f(long* x, long y, long z) { return __sync_bool_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:83: -1- m4_pattern_allow([^HAVE___SYNC_BOOL_COMPARE_AND_SWAP$])
m4trace:configure.ac:86: -1- KVDB_CHECK_BUILTIN([__sync_bool_compare_and_swap_8], [[#include <stdint.h>
    bool f(int64_t* x, int64_t y, int64_t z) { return __sync_bool_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:86: -1- m4_pattern_allow([^HAVE___SYNC_BOOL_COMPARE_AND_SWAP_8$])
m4trace:configure.ac:90: -1- KVDB_CHECK_BUILTIN([__sync_val_compare_and_swap], [[long f(long* x, long y, long z) { return __sync_val_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:90: -1- m4_pattern_allow([^HAVE___SYNC_VAL_COMPARE_AND_SWAP$])
m4trace:configure.ac:93: -1- KVDB_CHECK_BUILTIN([__sync_val_compare_and_swap_8], [[#include <stdint.h>
    int64_t f(int64_t* x, int64_t y, int64_t z) { return __sync_val_compare_and_swap(x, y, z); }]])
m4trace:configure.ac:93: -1- m4_pattern_allow([^HAVE___SYNC_VAL_COMPARE_AND_SWAP_8$])
m4trace:configure.ac:97: -1- KVDB_CHECK_BUILTIN([__sync_lock_test_and_set], [[long f(long* x) { return __sync_lock_test_and_set(x, 1); }]])
m4trace:configure.ac:97: -1- m4_pattern_allow([^HAVE___SYNC_LOCK_TEST_AND_SET$])
m4trace:configure.ac:100: -1- KVDB_CHECK_BUILTIN([__sync_lock_test_and_set_val], [[long f(long* x, long y) { return __sync_lock_test_and_set(x, y); }]])
m4trace:configure.ac:100: -1- m4_pattern_allow([^HAVE___SYNC_LOCK_TEST_AND_SET_VAL$])
m4trace:configure.ac:103: -1- KVDB_CHECK_BUILTIN([__sync_lock_release_set], [[void f(long* x) { __sync_lock_release(x); }]])
m4trace:configure.ac:103: -1- m4_pattern_allow([^HAVE___SYNC_LOCK_RELEASE_SET$])
m4trace:configure.ac:121: -1- m4_pattern_allow([^HAVE_CXX_AUTO$])
m4trace:configure.ac:136: -1- m4_pattern_allow([^HAVE_CXX_CONSTEXPR$])
m4trace:configure.ac:143: -1- m4_pattern_allow([^HAVE_CXX_STATIC_ASSERT$])
m4trace:configure.ac:150: -1- m4_pattern_allow([^HAVE_CXX_RVALUE_REFERENCES$])
m4trace:configure.ac:157: -1- m4_pattern_allow([^HAVE_CXX_TEMPLATE_ALIAS$])
m4trace:configure.ac:160: -1- m4_pattern_allow([^HAVE_TYPE_TRAITS$])
m4trace:configure.ac:168: -1- m4_pattern_allow([^HAVE_STD_HASH$])
m4trace:configure.ac:174: -1- m4_pattern_allow([^HAVE___HAS_TRIVIAL_COPY$])
m4trace:configure.ac:194: -1- m4_pattern_allow([^HAVE_STD_IS_TRIVIALLY_COPYABLE$])
m4trace:configure.ac:200: -1- m4_pattern_allow([^HAVE_STD_IS_RVALUE_REFERENCE$])
m4trace:configure.ac:239: -1- m4_pattern_allow([^HAVE_TCMALLOC$])
m4trace:configure.ac:243: -1- m4_pattern_allow([^HAVE_JEMALLOC$])
m4trace:configure.ac:247: -1- m4_pattern_allow([^HAVE_FLOW_MALLOC$])
m4trace:configure.ac:251: -1- m4_pattern_allow([^HAVE_HOARD_MALLOC$])
m4trace:configure.ac:257: -1- m4_pattern_allow([^MALLOC_LIBS$])
m4trace:configure.ac:262: -1- AC_DEFUN([KVDB_CHECK_SAME_TYPE], [
    pushdef([KVDB_CST_VAR], [AS_TR_SH([ac_cv_have_same_type_$1_is_$2])])
    AC_CACHE_CHECK([whether $1 and $2 are the same type], KVDB_CST_VAR,
	[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([$3
int f($1) {return 0;} int f($2) {return 0;}], [])],
	    [KVDB_CST_VAR=no], [KVDB_CST_VAR=yes])])
    if test $KVDB_CST_VAR = yes; then
	AC_DEFINE(AS_TR_CPP([HAVE_$1_IS_$2]), [1], [Define if $1 and $2 are the same type.])
    fi
    popdef([KVDB_CST_VAR])
])
m4trace:configure.ac:274: -1- KVDB_CHECK_SAME_TYPE([off_t], [long], [#include <stdio.h>])
m4trace:configure.ac:274: -1- m4_pattern_allow([^HAVE_OFF_T_IS_LONG$])
m4trace:configure.ac:275: -1- KVDB_CHECK_SAME_TYPE([off_t], [long long], [#include <stdio.h>])
m4trace:configure.ac:275: -1- m4_pattern_allow([^HAVE_OFF_T_IS_LONG_LONG$])
m4trace:configure.ac:276: -1- KVDB_CHECK_SAME_TYPE([int64_t], [long], [#include <stdint.h>])
m4trace:configure.ac:276: -1- m4_pattern_allow([^HAVE_INT64_T_IS_LONG$])
m4trace:configure.ac:277: -1- KVDB_CHECK_SAME_TYPE([int64_t], [long long], [#include <stdint.h>])
m4trace:configure.ac:277: -1- m4_pattern_allow([^HAVE_INT64_T_IS_LONG_LONG$])
m4trace:configure.ac:278: -1- KVDB_CHECK_SAME_TYPE([size_t], [unsigned], [#include <stdio.h>])
m4trace:configure.ac:278: -1- m4_pattern_allow([^HAVE_SIZE_T_IS_UNSIGNED$])
m4trace:configure.ac:279: -1- KVDB_CHECK_SAME_TYPE([size_t], [unsigned long], [#include <stdio.h>])
m4trace:configure.ac:279: -1- m4_pattern_allow([^HAVE_SIZE_T_IS_UNSIGNED_LONG$])
m4trace:configure.ac:280: -1- KVDB_CHECK_SAME_TYPE([size_t], [unsigned long long], [#include <stdio.h>])
m4trace:configure.ac:280: -1- m4_pattern_allow([^HAVE_SIZE_T_IS_UNSIGNED_LONG_LONG$])
m4trace:configure.ac:282: -1- m4_pattern_allow([^HAVE_LONG_LONG$])
m4trace:configure.ac:283: -1- m4_pattern_allow([^SIZEOF_SHORT$])
m4trace:configure.ac:284: -1- m4_pattern_allow([^SIZEOF_INT$])
m4trace:configure.ac:285: -1- m4_pattern_allow([^SIZEOF_LONG$])
m4trace:configure.ac:286: -1- m4_pattern_allow([^SIZEOF_LONG_LONG$])
m4trace:configure.ac:287: -1- m4_pattern_allow([^SIZEOF_VOID_P$])
m4trace:configure.ac:289: -1- m4_pattern_allow([^HAVE_DECL_GETLINE$])
m4trace:configure.ac:292: -1- m4_pattern_allow([^HAVE_DECL_CLOCK_GETTIME$])
m4trace:configure.ac:296: -1- m4_pattern_allow([^HAVE_CLOCK_GETTIME$])
m4trace:configure.ac:304: -1- m4_pattern_allow([^MASSTREE_ROW_TYPE_ARRAY$])
m4trace:configure.ac:306: -1- m4_pattern_allow([^MASSTREE_ROW_TYPE_ARRAY_VER$])
m4trace:configure.ac:308: -1- m4_pattern_allow([^MASSTREE_ROW_TYPE_BAG$])
m4trace:configure.ac:310: -1- m4_pattern_allow([^MASSTREE_ROW_TYPE_STR$])
m4trace:configure.ac:319: -1- m4_pattern_allow([^MASSTREE_MAXKEYLEN$])
m4trace:configure.ac:329: -1- m4_pattern_allow([^HAVE_MADV_HUGEPAGE$])
m4trace:configure.ac:340: -1- m4_pattern_allow([^HAVE_MAP_HUGETLB$])
m4trace:configure.ac:353: -1- m4_pattern_allow([^HAVE_SUPERPAGE$])
m4trace:configure.ac:360: -1- m4_pattern_allow([^HAVE_MEMDEBUG$])
m4trace:configure.ac:370: -1- m4_pattern_allow([^ENABLE_ASSERTIONS$])
m4trace:configure.ac:377: -1- m4_pattern_allow([^ENABLE_PRECONDITIONS$])
m4trace:configure.ac:379: -1- m4_pattern_allow([^ENABLE_PRECONDITIONS$])
m4trace:configure.ac:386: -1- m4_pattern_allow([^ENABLE_INVARIANTS$])
m4trace:configure.ac:388: -1- m4_pattern_allow([^ENABLE_INVARIANTS$])
m4trace:configure.ac:391: -1- m4_pattern_allow([^CACHE_LINE_SIZE$])
m4trace:configure.ac:436: -1- m4_pattern_allow([^HAVE_UNALIGNED_ACCESS$])
m4trace:configure.ac:438: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:438: -1- m4_pattern_allow([^LTLIBOBJS$])
